@startuml Hola

skinparam style strictuml
skinparam ArrowThickness 2
skinparam Linetype ortho

skinparam Class {
    FontSize 15
    BorderColor Black
    BackgroundColor Lavender
    BorderThickness 3

}

interface CompraVentaVehiculo <<interface>> {
    +venderVehiculo()
    +comprarVehiculo()
}
class Concesionario {
    -nombre : String
    -direccion : String

    +registrarVehiculo()
    +venderVehiculo()
    +agregarTransaccion()
    +agregarDetalleTransaccion()
    +generarReporte()
    +agregarFoto()
    +enviarEmailRecuperacion()
}

class Transaccion {
    -codigo : String
    +agregarDetalleTransaccion(TipoTransaccion)
}
enum TipoTransaccion <<enumeration>> {
    VENTA
    ALQUILER
    COMPRA
}
class DetalleTransaccion {
    - vehiculo : Vehiculo
    -codigoTransaccion : String

}


abstract class Usuario  <<abstract>> {
    - nombre : String
    - id : String
}

class Cliente {
    + alquilarVehiculo()
}

class Empleado {
    + registrarVehiculo()
    + registrarCliente()
    + venderVehiculo()
    + comprarVehiculo()
    + agregarTransaccion()
}

class Administrador {
    + registrarEmpleado()
    + eliminarEmpleado()
    + actulizarEmpleado()
    + bloquearEmpleado()
    + generarReporte()
    + recuperarContrasena()

}

abstract class Combustible <<abstract>> {
    'Si ninguno es null, significa que es eléctrico
    'Como el tipo de variable es con mayús, es un objeto
    'por los que puede dar null
    - autonomiaCargaCompleta : Double
    - tiempoDemoraCarga : Double
    'si ninguno es null, significa que es hibrido
    - esEnchufable : Boolean
    - esHibridoLigero : Boolean
    + Combustible(TipoCombustible)
    + Combustible(TipoCombustible, Boolean, Boolean)
    + Combustible(TipoCombustible, Double, Double)
    + esElectrico()
    + esHibrido()
}

enum TipoCombustible <<enumeration>> {
    GASOLINA
    DIESEL
    ELECTRICO
    HIBRIDO
}

abstract class Vehiculo <<abstract>> {
    - marca : String
    - modelo : String
    - cilindraje: Double
    - velocidadMaxima : Double

}

abstract class Automovil <<abstract>> {
    - numeroPasajeros : Integer
    - numeroBolsasAire : Integer
    - numeroPuertas : Integer
}

enum EstadoVehiculo <<enumeration>>{
    NUEVO
    USADO
}

enum TipoCambio <<enumeration>> {
    MANUAL
    AUTOMATICO
}

class Sedan {
    - tieneVelocidadCrucero : Boolean
    - tieneSensorColision : Boolean
    - tieneSensorTrafico : Boolean
    - tieneAsistentePermanencia : Boolean
}

class Deportivo {
    - numeroCaballosFuerza : Integer
    - tiempoAlcanza100Kmh : Integer
}

class Camioneta {
    - es4x4 : Boolean
}

class PickUp {
    - es4x4 : Boolean
    - capacidadCajaCarga : Double
}

abstract class Familiar <<abstract>> {
    - tieneAireAcondicinado : Boolean
    - tieneCamaraReversa : Boolean
    - tieneABS : Boolean
}

class Van {
    - capacidadMaletero : Double
}

class Bus {
    - numeroEjes : Integer
    - numeroSalidasEmergencia : Integer
}

class Camion {
    - capacidadCarga : Double
    - tieneAireAcondicinado : Boolean
    - tieneFrenosAire : Boolean
    - tieneABS : Boolean
    - numeroEjes : Integer
    - tipoCamion : String
}

class Moto {
}

'Concesionario
Concesionario "1" *--> "*" Usuario : -listaUsuarios
Concesionario "1" *--> "*" Transaccion : -listaTransacciones
Concesionario "1" *--> "*" Cliente : -listaClientes
Concesionario  "1" o--> "*" Vehiculo : -listaVehiculos
Transaccion  "1  '" o--> "*" DetalleTransaccion : -  listaDetalleTransacciones
'Transaccion
DetalleTransaccion "1"--> TipoTransaccion : - tipo

'Vehiculos
Vehiculo "1" --> TipoCambio : - tipo
Vehiculo "1" -down-> Combustible : - combustible
Vehiculo "1" --> EstadoVehiculo : - estado
Combustible "1" --> TipoCombustible : -tipo

Automovil -right-|> Vehiculo
Moto --|> Vehiculo
Camion -down-|> Vehiculo

Deportivo -up-|> Automovil
Familiar --|> Automovil
Camioneta -up-|> Sedan
PickUp -left-|> Familiar
Van -right-|> Familiar
Bus -up-|> Van
Sedan -up-|> Van

'Usuarios
Cliente -down-|> Usuario
Empleado -down-|> Usuario
Administrador -down-|> Empleado
Administrador "1" o-down- "*" Empleado : -listaEmpleados
Empleado .down.|> CompraVentaVehiculo
Cliente .down.|> CompraVentaVehiculo

@enduml