@startuml Hola

skinparam Class {
    FontSize 15
    BorderColor Black
    BackgroundColor Lavender
    BorderThickness 3

}
skinparam Arrow{
    Thickness 2
}

interface CompraVentaVehiculo <<interface>> {
    +venderVehiculo()
    +comprarVehiculo()
}
class Concesionario {
    -nombre : String
    -direccion : String

    +registrarVehiculo()
    +venderVehiculo()
    +agregarTransaccion()
    +agregarDetalleTransaccion()
    +generarReporte()
    +agregarFoto()
    +enviarEmailRecuperacion()
}

class Transaccion {
    -codigo : String
    +agregarDetalleTransaccion(TipoTransaccion)
}
enum TipoTransaccion {
    VENTA
    ALQUILER
    COMPRA
}
class DetalleTransaccion {
    - vehiculo : Vehiculo
    -codigoTransaccion : String

}


abstract class Usuario {
    - nombre : String
    - id : String
}

class Cliente {
    +venderVehiculo()
    +comprarVehiculo()
    +alquilarVehiculo()

}

class Empleado {
    + registrarVehiculo()
    + registrarCliente()
    + venderVehiculo()
    + comprarVehiculo()
    + agregarTransaccion()
}

class Administrador {
    + registrarEmpleado()
    + eliminarEmpleado()
    + actulizarEmpleado()
    + bloquearEmpleado()
    + generarReporte()
    + recuperarContrasena()

}

abstract class Combustible {
    'Si ninguno es null, significa que es eléctrico
    'Como el tipo de variable es con mayús, es un objeto
    'por los que puede dar null
    -autonomiaCargaCompleta : Double
    -tiempoDemoraCarga : Double
    'si ninguno es null, significa que es hibrido
    -esEnchufable : Boolean
    -esHibridoLigero : Boolean
    +Combustible(TipoCombustible)
    +Combustible(TipoCombustible, Boolean, Boolean)
    +Combustible(TipoCombustible, Double, Double)
    +esElectrico()
    +esHibrido()
}

enum TipoCombustible {
    GASOLINA
    DIESEL
    ELECTRICO
    HIBRIDO
}

abstract class Vehiculo {
    -marca : String
    -modelo : String
    -cilindraje: Double
    -velocidadMaxima : Double
    
}

abstract class Automovil{
    -numeroPasajeros : Integer
    -numeroBolsasAire : Integer
    -numeroPuertas : Integer
}

enum EstadoVehiculo{
    NUEVO
    USADO
}

enum TipoCambio{
    MANUAL
    AUTOMATICO
}

class Sedan {
    -tieneVelocidadCrucero : Boolean
    -tieneSensorColision : Boolean
    -tieneSensorTrafico : Boolean
    -tieneAsistentePermanencia : Boolean
}

class Deportivo{
    -numeroCaballosFuerza : Integer
    -TiempoAlcanza100Kmh : Integer
}

class Camioneta{
    -es4x4 : Boolean
}

class PickUp{
    -es4x4 : Boolean
    -capacidadCajaCarga : Double

}
abstract class Familiar{
    -tieneAireAcondicinado : Boolean 
    -tieneCamaraReversa : Boolean 
    -tieneABS : Boolean 
}

class Van{
    -capacidadMaletero : Double 
}

class Bus{
    -numeroEjes : Integer
    -numeroSalidasEmergencia : Integer
}

class Camion{
    -capacidadCarga : Double
    -tieneAireAcondicinado : Boolean 
    -tieneFrenosAire : Boolean
    -tieneABS : Boolean 
    -numeroEjes : Integer
    -tipoCamion : String
}
class Moto {
}
Concesionario "1" *--> "*" Usuario : -listaUsuarios
Concesionario "1" *--> "*" Transaccion : -listaTransacciones
Concesionario "1" *--> "*" Cliente : -listaClientes
Concesionario  "1" o--> "*" Vehiculo : -listaVehiculos
Transaccion  "1  '" o--> "*" DetalleTransaccion : -  listaDetalleTransacciones
DetalleTransaccion "1"--> TipoTransaccion : - tipo
Vehiculo "1"--> EstadoVehiculo : - estado
Deportivo --|> Automovil
Automovil --|> Vehiculo
Moto --|> Vehiculo
Camioneta --|> Sedan
PickUp --|> Familiar
Familiar --|> Automovil
Bus --|> Van
Sedan --|> Van
Van --|> Familiar
Camion --|> Vehiculo
Usuario <|-- Cliente
Usuario <|-- Empleado
Empleado <|- Administrador
Combustible "1" --> TipoCombustible : - tipo
Vehiculo "1"--> TipoCambio : - tipo
Vehiculo "1"--> Combustible : - combustible
Empleado ..|> CompraVentaVehiculo
Cliente ..|> CompraVentaVehiculo
@enduml